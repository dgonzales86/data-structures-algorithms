"""class Graph:
    add_vertex - adds a node/vertes to the graph
    add_edge - adds weighted edge between nodes
    delete_edge - removes edges between nodes
    delete_vertes - loops through edges between nodes, deletes them, and proceeds to delete self
    print_distance_graph - prints graph's contents"""

import csv


class Graph:
    def __init__(self):
        self.distance_graph = {}

    def add_vertex(self, vertex):
        if vertex not in self.distance_graph.keys():
            self.distance_graph[vertex] = {}
            return True
        return False

    def add_edge(self, vertex1, vertex2, distance):
        if vertex1 in self.distance_graph.keys() and vertex2 in self.distance_graph.keys():
            self.distance_graph[vertex1][vertex2] = distance
            self.distance_graph[vertex2][vertex1] = distance
            return True
        return False

    def delete_edge(self, vertex1, vertex2):
        if vertex1 in self.distance_graph.keys() and vertex2 in self.distance_graph[vertex1]:
            del self.distance_graph[vertex1][vertex2]
            del self.distance_graph[vertex2][vertex1]
            return True
        return False

    def delete_vertex(self, vertex):
        if vertex in self.distance_graph.keys():
            for bound_vertex in self.distance_graph[vertex]:
                del self.distance_graph[bound_vertex][vertex]
            del self.distance_graph[vertex]
            return True
        return False

    def print_distance_graph(self):
        for vertex in self.distance_graph:
            print(vertex, ':', self.distance_graph[vertex])

    def csv_parse_graph(self, address_file, distance_table):
        with open(address_file, 'r') as address_file:
            address_reader = csv.reader(address_file)
            for row in address_reader:
                address = row[0]
                self.add_vertex(address)
    #
    #     with open(distance_table, 'r') as distance_file:
    #         distance_reader = csv.reader(distance_file)
    #         row_index = 0
    #         for row in distance_reader:
    #             column_index = 0
    #             for column in row:
    #                 if column != '':
    #                   address1 = list(self.vertex())[row_index]



    def populate_graph(self):
        self.add_edge('4001 South 700 East', '4001 South 700 East', 0)
        self.add_edge('4001 South 700 East', '1060 Dalton Ave S', 7.2 )
        self.add_edge('4001 South 700 East', '1330 2100 S', 3.8)
        self.add_edge('4001 South 700 East', '1488 4800 S', 11.0)
        self.add_edge('4001 South 700 East', '177 W Price Ave', 2.2)
        self.add_edge('4001 South 700 East', '195 W Oakland Ave', 3.5)
        self.add_edge('4001 South 700 East', '2010 W 500 S', 10.9)
        self.add_edge('4001 South 700 East', '2300 Parkway Blvd', 8.6)
        self.add_edge('4001 South 700 East', '233 Canyon Rd', 7.6)
        self.add_edge('4001 South 700 East', '2530 S 500 E', 2.8)
        self.add_edge('4001 South 700 East', '2600 Taylorsville Blvd', 6.4)
        self.add_edge('4001 South 700 East', '2835 Main St', 3.2)
        self.add_edge('4001 South 700 East', '300 State St', 7.6)
        self.add_edge('4001 South 700 East', '3060 Lester St', 5.2)
        self.add_edge('4001 South 700 East', '3148 S 1100 W', 4.4)
        self.add_edge('4001 South 700 East', '3365 S 900 W', 3.7)
        self.add_edge('4001 South 700 East', '3575 W Valley Central Station bus Loop', 7.6)
        self.add_edge('4001 South 700 East', '3595 Main St', 2.0)
        self.add_edge('4001 South 700 East', '380 W 2880 S', 3.6)
        self.add_edge('4001 South 700 East', '410 S State St', 6.5)
        self.add_edge('4001 South 700 East', '4300 S 1300 E', 1.9)
        self.add_edge('4001 South 700 East', '4580 S 2300 E', 3.4)
        self.add_edge('4001 South 700 East', '5025 State St', 2.4)
        self.add_edge('4001 South 700 East', '5100 South 2700 West', 6.4)
        self.add_edge('4001 South 700 East', '5383 South 900 East #104', 2.4)
        self.add_edge('4001 South 700 East', '600 E 900 South', 5.0)
        self.add_edge('4001 South 700 East', '6351 South 900 East', 3.6)
        self.add_edge('1060 Dalton Ave S', '1060 Dalton Ave S', 0)
        self.add_edge('1060 Dalton Ave S', '1330 2100 S', 7.1)
        self.add_edge('1060 Dalton Ave S', '1488 4800 S', 6.4)
        self.add_edge('1060 Dalton Ave S', '177 W Price Ave', 6.0)
        self.add_edge('1060 Dalton Ave S', '195 W Oakland Ave', 4.8)
        self.add_edge('1060 Dalton Ave S', '2010 W 500 S', 1.6)
        self.add_edge('1060 Dalton Ave S', '2300 Parkway Blvd', 2.8)
        self.add_edge('1060 Dalton Ave S', '233 Canyon Rd', 4.8)
        self.add_edge('1060 Dalton Ave S', '2530 S 500 E', 6.3)
        self.add_edge('1060 Dalton Ave S', '2600 Taylorsville Blvd', 7.3)
        self.add_edge('1060 Dalton Ave S', '2835 Main St', 5.3)
        self.add_edge('1060 Dalton Ave S', '300 State St', 4.8)
        self.add_edge('1060 Dalton Ave S', '3060 Lester St', 3.0)
        self.add_edge('1060 Dalton Ave S', '3148 S 1100 W', 4.6)
        self.add_edge('1060 Dalton Ave S', '3365 S 900 W', 4.5)
        self.add_edge('1060 Dalton Ave S', '3575 W Valley Central Station bus Loop', 7.4)
        self.add_edge('1060 Dalton Ave S', '3595 Main St', 6.0)
        self.add_edge('1060 Dalton Ave S', '380 W 2880 S', 5.0)
        self.add_edge('1060 Dalton Ave S', '410 S State St', 4.8)
        self.add_edge('1060 Dalton Ave S', '4300 S 1300 E', 9.5)
        self.add_edge('1060 Dalton Ave S', '4580 S 2300 E', 10.9)
        self.add_edge('1060 Dalton Ave S', '5025 State St', 8.3)
        self.add_edge('1060 Dalton Ave S', '5100 South 2700 West', 6.9)
        self.add_edge('1060 Dalton Ave S', '5383 South 900 East #104', 10.0)
        self.add_edge('1060 Dalton Ave S', '600 E 900 South', 4.4)
        self.add_edge('1060 Dalton Ave S', '6351 South 900 East', 13.0)
        self.add_edge('1330 2100 S', '1330 2100 S', 0 )
        self.add_edge('1330 2100 S', '1488 4800 S', 6.2)
        self.add_edge('1330 2100 S', '177 W Price Ave', 4.4)
        self.add_edge('1330 2100 S', '195 W Oakland Ave', 2.8)
        self.add_edge('1330 2100 S', '2010 W 500 S', 8.6)
        self.add_edge('1330 2100 S', '2300 Parkway Blvd', 6.3)
        self.add_edge('1330 2100 S', '233 Canyon Rd', 5.3)
        self.add_edge('1330 2100 S', '2530 S 500 E', 1.6)
        self.add_edge('1330 2100 S', '2600 Taylorsville Blvd', 10.4)
        self.add_edge('1330 2100 S', '2835 Main St', 3.0)
        self.add_edge('1330 2100 S', '300 State St', 5.3)
        self.add_edge('1330 2100 S', '3060 Lester St', 6.5)
        self.add_edge('1330 2100 S', '3148 S 1100 W', 5.6)
        self.add_edge('1330 2100 S', '3365 S 900 W', 5.8)
        self.add_edge('1330 2100 S', '3575 W Valley Central Station bus Loop', 5.7)
        self.add_edge('1330 2100 S', '3595 Main St', 4.1)
        self.add_edge('1330 2100 S', '380 W 2880 S', 3.6)
        self.add_edge('1330 2100 S', '410 S State St', 4.3)
        self.add_edge('1330 2100 S', '4300 S 1300 E', 3.3)
        self.add_edge('1330 2100 S', '4580 S 2300 E', 5.0)
        self.add_edge('1330 2100 S', '5025 State St', 6.1)
        self.add_edge('1330 2100 S', '5100 South 2700 West', 9.7)
        self.add_edge('1330 2100 S', '5383 South 900 East #104', 6.1)
        self.add_edge('1330 2100 S', '600 E 900 South', 2.8)
        self.add_edge('1330 2100 S', '6351 South 900 East', 7.4)
        self.add_edge('1488 4800 S', '1488 4800 S', 0)
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('1488 4800 S', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )
        # self.add_edge('', '', )




